import { useState } from "react";
import "../../styles/AuthenticatorAppCodeInput.css";
import { useSelector } from "react-redux";
import UserService from "../../service/UserService";
import { toast } from "react-toastify";
import TfaOnMessage from "./TfaOnMessage";

const AuthenticatorAppCodeInput = ({ secrete, onClose }) => {
  const connectedUser = useSelector((state) => state.authentication);
  const [code, setCode] = useState("");
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState("");

  const enable2FA = async (event) => {
    event.preventDefault();
    const tfaResponse = await UserService.enable2FA(
      { secrete: secrete, otp: code },
      connectedUser.authToken
    );
    if (!tfaResponse.success) {
      if (tfaResponse?.error?.message?.includes("Invalid one-time password")) {
        setError(tfaResponse.error.message);
      }
      toast.error("Failed to ON authentication app security!");
      return;
    }
    setSuccess(true);
    toast.success("The authentication app security method is ON");
  };

  if (success) {
    return <TfaOnMessage onClose={onClose} />;
  } else {
    return (
      <div className="authenticator-app-code-input">
        <header className="authentication-app-code-heading">
          <h5>{connectedUser.fullName} â€¢ NamasteApp</h5>
          <h2>Get your code from your authentication app</h2>
          <p>Enter the 6-digit code generated by your authentication app.</p>
        </header>

        <form className="tfa-form">
          <label htmlFor="code" className="tfa-label">
            Enter code
          </label>
          <input
            type="text"
            id="code"
            value={code}
            onChange={(e) => setCode(e.target.value)}
            maxLength={6}
            required
            className="tfa-input"
          />
          {error.length > 0 && (
            <span style={{ color: "red" }}>{error}</span>
          )}
          <button type="button" className="next-btn" onClick={enable2FA}>
            Next
          </button>
        </form>
      </div>
    );
  }
};

export default AuthenticatorAppCodeInput;
